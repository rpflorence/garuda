require 'yaml'

# tests run at the garuda/ root
Dir.chdir(File.dirname(__FILE__))
Dir.chdir('..')
@root = Dir.pwd


task :default => [:testall]
task :testall => [
  :test_languages, 
  :test_garuda,
  :test_run_script,
  :test_simple_install,
  :test_simple_install_garuda_hook,
  :test_post_receive_hook
]


task :test_languages do
  ruby 'tests/languages_test.rb'
end

task :test_garuda do
  Rake::Task["create_repo"].execute
  ruby 'tests/garuda_test.rb'
  Rake::Task["remove_repo"].execute
end


task :test_run_script do
  Rake::Task["create_repo"].execute
  ruby 'tests/run_test.rb'
  Rake::Task["remove_repo"].execute
end

task :test_simple_install => [:install_garuda] do |t|
  ruby  'tests/simple_install_test.rb'
end

task :test_simple_install_garuda_hook => [:push_to_garuda] do |t|
  ruby  'tests/simple_install_garuda_hook_test.rb'
end

task :test_post_receive_hook => [:push_to_test] do |t|
  ruby 'tests/post_receive_hook_test.rb'
end


task :create_repo do
  Dir.chdir('..')
  `mkdir test.git; cd test.git; git --bare init
  cd ..; git clone test.git; cd test 
  echo 'test' > testfile; git add testfile; git commit -m 'testing'; git push origin master;`
  Dir.chdir(@root)
end

task :remove_repo do
  Dir.chdir('..')
  `rm -rf test; rm -rf test.git`
  Dir.chdir(@root)
end

task :create_install_env do
  # creates: 
  #   test/
  #     tmp/
  #       server/
  #         test.git
  #       local/
  #         test
  `mkdir tests/tmp/server; cd tests/tmp/server
  mkdir test.git; cd test.git; git --bare init
  cd ../..; mkdir local; cd local; git clone ../server/test.git`
  Dir.chdir(@root)
end

task :install_garuda => [:create_install_env] do |t|
  Dir.chdir('tests/tmp/server')
  load "#@root/.install/simple.rb"
  Dir.chdir @root
end

task :push_to_garuda => [:install_garuda] do |t|
  # push from local garuda to server garuda so it installs the hooks 
  # on the test.git remote repository
  `cd tests/tmp/local; git clone ../server/garuda
  cd garuda; touch foo; git add .; git commit -m 'nothing'; git push origin master`
  # get back to where we started
  Dir.chdir @root
end

task :push_to_test => [:push_to_garuda] do |t|
  # update the local test repository and push to the remote test.git repository
  # this will make the installed hook run in test.git/hooks
  `cd tests/tmp/local/test; touch foo; git add .; git commit -m 'nothing'; git push origin master`
  # get back to where we started
  Dir.chdir @root
end

task :cleanup do
  Rake::Task["remove_repo"].execute
  `rm -rf tmp/*`
  `rm -rf tests/tmp/*`
end

# clean up!
Rake::Task["cleanup"].execute

# Old stuffz
task :create_destination do
  `mkdir test_destination`
end

task :remove_destination do
  `rm -rf test_destination`
end

task :test_git_extractor do
  Rake::Task["create_repo"].execute
  ruby "tests/git_extractor_test.rb"
  Rake::Task["remove_repo"].execute
end

task :test_rsync do
  Rake::Task["create_repo"].execute
  Rake::Task["create_repo"].execute
  ruby 'tests/rsync_test.rb'
  Rake::Task["remove_repo"].execute
  Rake::Task["remove_destination"].execute
end

task :test_multi_ftp do
  Rake::Task["create_repo"].execute
  ruby 'tests/multi_ftp_test.rb'
  Rake::Task["remove_repo"].execute
end


