#!/usr/bin/env ruby

require 'rubygems'
require 'yaml'
require 'erb'

module Tty extend self
  def blue; bold 34; end
  def white; bold 39; end
  def red; underline 31; end
  def reset; escape 0; end
  def bold n; escape "1;#{n}" end
  def underline n; escape "4;#{n}" end
  def escape n; "\033[#{n}m" if STDOUT.tty? end
end

class Array
  def shell_s
    cp = dup
    first = cp.shift
    cp.map{ |arg| arg.gsub " ", "\\ " }.unshift(first) * " "
  end
end

def ohai *args
  puts "#{Tty.blue}==>#{Tty.white} #{args.shell_s}#{Tty.reset}"
end

def warn warning
  puts "#{Tty.red}Warning#{Tty.reset}: #{warning.chomp}"
end
 
def system *args
  abort "Failed during: #{args.shell_s}" unless Kernel.system *args
end

# reset the working tree
ohai "Updating the clone's working tree"
Dir.chdir('../garuda')
ENV['GIT_DIR'] = '.git'
system "umask 002 && git pull gito master"

# open the config files
config        = YAML::load(File.open('config.yml'))
repo_config   = YAML::load(File.open('repos.yml'))

# Create template
template      = File.open('.app/post-receive.erb')
erb           = ERB.new(template, 0, "%<>")
pwd           = `pwd`.chomp
hook_contents = erb.result
repos         = config['repositories']
unless File.directory? repos
  warn "Directory to repositories defined in config.yml does not exist. Please update config.yml and try again"
  puts "Non-existent: #{repos}"
  puts
  Process.exit
end

# install the post-receive script on all the repositories
repo_config.each do |repo, v|
  ohai "Updating hook for #{repo}"
  base_dir = "#{repos}/#{repo}.git"
  if File.exists? base_dir
    hook = "#{base_dir}/hooks/post-receive"
    unless File.exists? hook
      ohai "Renaming #{base_dir}/hooks/post-receive.sample to #{base_dir}/hooks/post-receive"
      File.rename("#{base_dir}/hooks/post-receive.sample", hook) 
    end
    ohai "chmod +x #{hook}" unless File.executable? hook
    system "chmod +x #{hook}"
    File.open(hook, 'w'){ |f| f.write(hook_contents) }
  else
    warn "Repository #{repo} is defined in repos.yml, but the directory doesn't exist."
    puts "Directory: #{Tty.white}#{base_dir}#{Tty.reset}"
    puts
  end
end