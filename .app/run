#!/usr/bin/ruby

# This script sets up some global variables
#
# ENV['repository'] || REPOSITORY - the repository being pushed
# ENV['branch'] || BRANCH - the branch pushed
# CONFIG - the global build script config file

# EXTRACTOR - deployer objects, see lib/deployer.rb and lib/git_extractor
#
# then it runs a bunch of scripts

Dir.chdir(File.dirname(__FILE__))
Dir.chdir('..')
require 'yaml'
require 'lib/deployer.rb'

# Check if script was called manually instead of from hook
unless ENV['repository']
  ENV['repository'] = ARGV[0]
  ENV['ref_type'] = ARGV[1] || 'heads'
  ENV['ref_name'] = ARGV[2]
end

# use these in the bin scripts
REPOSITORY = ENV['repository']
REF_TYPE = ENV['ref_type']
REF_NAME = ENV['ref_name']
CONFIG = YAML::load(File.open("config.yml"))
REPOS_CONFIG = YAML::load(File.open('repos.yml'))

# check if the REPOSITORY is in the config file
unless REPOS_CONFIG[REPOSITORY]
  puts "Repository '#{REPOSITORY}' not found in repos.yml, exiting."
  Process.exit
end

# Run default scripts under `post-receive` in config.yml
CONFIG['post-receive']['all'].each{ |script| load "bin/#{script}" } if CONFIG['post-receive'] and CONFIG['post-receive']['all']
# Run default scripts for heads or tags, matches a regex against the yaml key
if CONFIG['post-receive'] and CONFIG['post-receive'][REF_TYPE]
  CONFIG['post-receive'][REF_TYPE].each do |key, scripts| 
    scripts.each{ |script| load "bin/#{script}" } if REF_NAME.match(/#{key}/)
  end 
end

# Validate if we should do anything specific for this repository
unless REPOS_CONFIG[REPOSITORY][REF_TYPE]
  puts "No heads, tags, or ref name data in repos.yml for this repository, deploying nothing and exiting."
  Process.exit
end

# find matches and loop them (can be multiple matches in yml regex keys)
# extract the files, then run the scripts
REPOS_CONFIG[REPOSITORY][REF_TYPE].each do |key, data|
  if REF_NAME.match(/#{key}/)
    
    # extract the files
    EXTRACTOR = Deployer.new({
      :path => "#{CONFIG['repositories']}/#{REPOSITORY}.git",
      :branch => REF_NAME,
      :ref_data => REPOS_CONFIG[REPOSITORY][REF_TYPE][key],
      :tmp => "#{CONFIG['repositories']}",
      :archive_path => REPOS_CONFIG[REPOSITORY]['src'] || '',
      :verbose => true
    })
    EXTRACTOR.extract

    # Run local scripts IN the repository
    if REPOS_CONFIG[REPOSITORY][REF_TYPE][key]['local_scripts']
      dir = "#{EXTRACTOR.extracted_path}/#{REPOS_CONFIG[REPOSITORY][REF_TYPE][key]['local_scripts']}"
      Dir.foreach(dir){ |file| load "#{dir}/#{file}" unless %w[ . .. .DS_Store].include?(file) }
    end

    # Run scripts under `pre-deploy` in the config file
    CONFIG['pre-deploy']['all'].each{ |script| load "bin/#{script}" } if CONFIG['pre-deploy'] and CONFIG['pre-deploy']['all']
    CONFIG['pre-deploy'][REF_TYPE][key].each{ |script| load "bin/#{script}" } if CONFIG['pre-deploy'] and CONFIG['pre-deploy'][REF_TYPE][key]
      
    # Run deployment scripts
    REPOS_CONFIG[REPOSITORY][ENV['ref_type']][key]['script'].each { |script| load "bin/#{script}" }
    
    # todo: post-deploy scripts
    
    EXTRACTOR.cleanup
  end
end

